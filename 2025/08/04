
#2025/08/04

#TIL

1. CI/CD란 무엇일까?
- 소프트웨어 개발에서 지속적인 통합, 지속적인 전달, 지속적인 배포의 줄임말. CI/CD 도입하면 배포 과정이 자동화되고, 코드 품질이 일정 수준 이상
유지되기 때문에 개발 생산성과 안정성을 높일 수 있다.

2. CI와 CD의 차이를 설명해라
- CI(Continuous Integration)는 코드 병합 시 자동으로 빌드, 테스트가 실행되는 과정, CD(Continuous Delivery)는 CI 이후, 자동화된 테스트를 통과한 코드를 스테이징 환경까지 자동 배포하는 단계, CD(Continuous Deployment)는 그 다음으로,
그 다음으로, 테스트를 통과한 코드를 운영환경까지 자동으로 배포하는것. 즉 CI는 코드 품질 관리 중심이고, CD는 배포 자동화에 집중된 단계이다.

3. CI/CD 도입 시 장점은?
- 코드 변경이 자주 테스트되고 병합되므로 품질이 높아진다. 배포가 자동화되어 사람이 하는 반복 작업을 줄일 수 있고, 실수도 방지할 수 있다. 코드 병합 전 테스트가 필수이므로, 테스트 코드 작성이 
습관화된다. 빠르게 피드백을 받을 수 있어서 개발 속도와 협업 효율성이 좋아진다.

4. 빌드(Build)가 무엇인가?
- 개발자가 작성한 코드를 실제 서비스에 적합한 형태로 변환하는 과정, 프론트엔드에서 Webpack, Vite 등을 사용해서 여러 JS/TS,CSS 파일을 하나의 정적 자산으로 번들링하는 것, 최적화, 트리쉐이킹 등 함께 수행됨

5. 테스트는 어떤 종류가 있고, 어떤 도구를 사용해보았는가?
- 테스트는 크게 단위, 통합, E2E 로 나눌 수 있다. 단위는 작은 함수나 컴포넌트 단위 검증, 통합은 여러 모듈이 함께 동작하는지 확인, E2E 테스트는 실제 사용자 시나리오를 전체적으로 테스트하는 것을 말한다.

6. 배포 시 주의할 점은 무엇인가?
- 롤백 전략이 있어야하고, 배포 전 테스트를 충분히 거쳐야한다. 트래픽이 많은 서비스라면 무중단 배포도 고려해야하며, 민감한 정보가 환경 변수에 잘 설정되어 있는지, 변경된 코드가 실제 운영에서 정상 동작하는지 모니터링도 필요하다.

7. 어떤 CI/CD 도구를 사용해보았나?

