
#TIL

#2025/08/05

1. 클래스와 객체 차이는 무엇인가?
- 클래스는 객체 만들어 내기 위한 틀로, 속성과 메서드의 집합을 정의한다. 반면, 객체는 클래스에서 실제로 생성된 실체로, 메모리에 존재하며 클래스에서 정의한 속성과 메서드를 실제로 사용할 수 있게 된다.

2. 인스턴스란?
- 객체가 메모리에 할당된 상태, 객체와 인스턴스를 같은 의미로 쓰기도 하지만, 클래스에서 생성된 실체가 메모리에 올라간 상태를 인스턴스라고도 한다. AWS에서는 클라우드 가상 서버를 의미한다.

3. static 키워드는 무엇이고, 언제 사용하나?
- static은 클래스 자체에 속한 변수나 메서드를 정의할 때 사용, 객체 개별적으로 존재할 필요 없는 공통된 데이터를 클래스 수준에서 정의하고 공유할 때 사용, 전제 사용자 수나 공통 설정 값 등 저장할 때 유용

4. static 사용하는 이유는?
- 클래스 전체에서 공유되는 값을 저장할 수 있고, 인스턴스를 생성하지 않고도 접근이 가능하기 때문에 공통 데이터를 다룰 때 코드 효율성과 관리가 좋아진다.

5. static의 단점은?
- 모든 객체가 값을 공유하므로, 한 곳에서 값 바뀌면 전체에 영향을 줘 버그 발생 가능성이 증가하며 테스트 간 상태 공유로 인해 단위 테스트의 독립성이 깨진다. JVM 종료 전 메모리에 남아 메모리 누수 위험이 꺼지며,
멀티스레드 환경에서 동기화 문제로 인해 Race Condition 발생 가능성이 있다.

6. static 대신 사용할 수 있는 방법은?
- 공통 데이터를 관리할 땐 싱글턴 패턴 사용할 수 있고, DI 프레임워크에서는 빈으로 등록해서 객체를 공유하는 방식이 안전하고 테스트하기 쉽다.
